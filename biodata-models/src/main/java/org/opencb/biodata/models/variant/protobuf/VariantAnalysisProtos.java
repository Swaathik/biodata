// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VariantAnalysis.proto

package org.opencb.biodata.models.variant.protobuf;

public final class VariantAnalysisProtos {
  private VariantAnalysisProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ComplexVariantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.opencb.biodata.models.variant.protobuf.ComplexVariant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> 
        getSecondaryAlternatesList();
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate getSecondaryAlternates(int index);
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    int getSecondaryAlternatesCount();
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder> 
        getSecondaryAlternatesOrBuilderList();
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder getSecondaryAlternatesOrBuilder(
        int index);

    /**
     * <code>map&lt;int32, .org.opencb.biodata.models.variant.protobuf.Genotype&gt; sampleToGenotype = 2;</code>
     */
    java.util.Map<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
    getSampleToGenotype();
  }
  /**
   * Protobuf type {@code org.opencb.biodata.models.variant.protobuf.ComplexVariant}
   *
   * <pre>
   **
   ** Mapping a ComplexGenotype to an individual (sample index)
   * </pre>
   */
  public  static final class ComplexVariant extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.opencb.biodata.models.variant.protobuf.ComplexVariant)
      ComplexVariantOrBuilder {
    // Use ComplexVariant.newBuilder() to construct.
    private ComplexVariant(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ComplexVariant() {
      secondaryAlternates_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ComplexVariant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                secondaryAlternates_ = new java.util.ArrayList<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate>();
                mutable_bitField0_ |= 0x00000001;
              }
              secondaryAlternates_.add(input.readMessage(org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sampleToGenotype_ = com.google.protobuf.MapField.newMapField(
                    SampleToGenotypeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
              sampleToGenotype = input.readMessage(
                  SampleToGenotypeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sampleToGenotype_.getMutableMap().put(sampleToGenotype.getKey(), sampleToGenotype.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          secondaryAlternates_ = java.util.Collections.unmodifiableList(secondaryAlternates_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetSampleToGenotype();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.class, org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.Builder.class);
    }

    public static final int SECONDARYALTERNATES_FIELD_NUMBER = 1;
    private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> secondaryAlternates_;
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> getSecondaryAlternatesList() {
      return secondaryAlternates_;
    }
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder> 
        getSecondaryAlternatesOrBuilderList() {
      return secondaryAlternates_;
    }
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    public int getSecondaryAlternatesCount() {
      return secondaryAlternates_.size();
    }
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate getSecondaryAlternates(int index) {
      return secondaryAlternates_.get(index);
    }
    /**
     * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
     */
    public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder getSecondaryAlternatesOrBuilder(
        int index) {
      return secondaryAlternates_.get(index);
    }

    public static final int SAMPLETOGENOTYPE_FIELD_NUMBER = 2;
    private static final class SampleToGenotypeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>newDefaultInstance(
                  org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> sampleToGenotype_;
    private com.google.protobuf.MapField<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
    internalGetSampleToGenotype() {
      if (sampleToGenotype_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SampleToGenotypeDefaultEntryHolder.defaultEntry);
     }
      return sampleToGenotype_;
    }
    /**
     * <code>map&lt;int32, .org.opencb.biodata.models.variant.protobuf.Genotype&gt; sampleToGenotype = 2;</code>
     */

    public java.util.Map<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> getSampleToGenotype() {
      return internalGetSampleToGenotype().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < secondaryAlternates_.size(); i++) {
        output.writeMessage(1, secondaryAlternates_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> entry
           : internalGetSampleToGenotype().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
        sampleToGenotype = SampleToGenotypeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(2, sampleToGenotype);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < secondaryAlternates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, secondaryAlternates_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> entry
           : internalGetSampleToGenotype().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
        sampleToGenotype = SampleToGenotypeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, sampleToGenotype);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.opencb.biodata.models.variant.protobuf.ComplexVariant}
     *
     * <pre>
     **
     ** Mapping a ComplexGenotype to an individual (sample index)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.opencb.biodata.models.variant.protobuf.ComplexVariant)
        org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetSampleToGenotype();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableSampleToGenotype();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.class, org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.Builder.class);
      }

      // Construct using org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecondaryAlternatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (secondaryAlternatesBuilder_ == null) {
          secondaryAlternates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          secondaryAlternatesBuilder_.clear();
        }
        internalGetMutableSampleToGenotype().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor;
      }

      public org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant getDefaultInstanceForType() {
        return org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.getDefaultInstance();
      }

      public org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant build() {
        org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant buildPartial() {
        org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant result = new org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant(this);
        int from_bitField0_ = bitField0_;
        if (secondaryAlternatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            secondaryAlternates_ = java.util.Collections.unmodifiableList(secondaryAlternates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.secondaryAlternates_ = secondaryAlternates_;
        } else {
          result.secondaryAlternates_ = secondaryAlternatesBuilder_.build();
        }
        result.sampleToGenotype_ = internalGetSampleToGenotype();
        result.sampleToGenotype_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant) {
          return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant other) {
        if (other == org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant.getDefaultInstance()) return this;
        if (secondaryAlternatesBuilder_ == null) {
          if (!other.secondaryAlternates_.isEmpty()) {
            if (secondaryAlternates_.isEmpty()) {
              secondaryAlternates_ = other.secondaryAlternates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSecondaryAlternatesIsMutable();
              secondaryAlternates_.addAll(other.secondaryAlternates_);
            }
            onChanged();
          }
        } else {
          if (!other.secondaryAlternates_.isEmpty()) {
            if (secondaryAlternatesBuilder_.isEmpty()) {
              secondaryAlternatesBuilder_.dispose();
              secondaryAlternatesBuilder_ = null;
              secondaryAlternates_ = other.secondaryAlternates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              secondaryAlternatesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSecondaryAlternatesFieldBuilder() : null;
            } else {
              secondaryAlternatesBuilder_.addAllMessages(other.secondaryAlternates_);
            }
          }
        }
        internalGetMutableSampleToGenotype().mergeFrom(
            other.internalGetSampleToGenotype());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> secondaryAlternates_ =
        java.util.Collections.emptyList();
      private void ensureSecondaryAlternatesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          secondaryAlternates_ = new java.util.ArrayList<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate>(secondaryAlternates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder> secondaryAlternatesBuilder_;

      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> getSecondaryAlternatesList() {
        if (secondaryAlternatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(secondaryAlternates_);
        } else {
          return secondaryAlternatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public int getSecondaryAlternatesCount() {
        if (secondaryAlternatesBuilder_ == null) {
          return secondaryAlternates_.size();
        } else {
          return secondaryAlternatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate getSecondaryAlternates(int index) {
        if (secondaryAlternatesBuilder_ == null) {
          return secondaryAlternates_.get(index);
        } else {
          return secondaryAlternatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder setSecondaryAlternates(
          int index, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate value) {
        if (secondaryAlternatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.set(index, value);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder setSecondaryAlternates(
          int index, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder builderForValue) {
        if (secondaryAlternatesBuilder_ == null) {
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.set(index, builderForValue.build());
          onChanged();
        } else {
          secondaryAlternatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder addSecondaryAlternates(org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate value) {
        if (secondaryAlternatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.add(value);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder addSecondaryAlternates(
          int index, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate value) {
        if (secondaryAlternatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.add(index, value);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder addSecondaryAlternates(
          org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder builderForValue) {
        if (secondaryAlternatesBuilder_ == null) {
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.add(builderForValue.build());
          onChanged();
        } else {
          secondaryAlternatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder addSecondaryAlternates(
          int index, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder builderForValue) {
        if (secondaryAlternatesBuilder_ == null) {
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.add(index, builderForValue.build());
          onChanged();
        } else {
          secondaryAlternatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder addAllSecondaryAlternates(
          java.lang.Iterable<? extends org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate> values) {
        if (secondaryAlternatesBuilder_ == null) {
          ensureSecondaryAlternatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, secondaryAlternates_);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder clearSecondaryAlternates() {
        if (secondaryAlternatesBuilder_ == null) {
          secondaryAlternates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public Builder removeSecondaryAlternates(int index) {
        if (secondaryAlternatesBuilder_ == null) {
          ensureSecondaryAlternatesIsMutable();
          secondaryAlternates_.remove(index);
          onChanged();
        } else {
          secondaryAlternatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder getSecondaryAlternatesBuilder(
          int index) {
        return getSecondaryAlternatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder getSecondaryAlternatesOrBuilder(
          int index) {
        if (secondaryAlternatesBuilder_ == null) {
          return secondaryAlternates_.get(index);  } else {
          return secondaryAlternatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder> 
           getSecondaryAlternatesOrBuilderList() {
        if (secondaryAlternatesBuilder_ != null) {
          return secondaryAlternatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(secondaryAlternates_);
        }
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder addSecondaryAlternatesBuilder() {
        return getSecondaryAlternatesFieldBuilder().addBuilder(
            org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder addSecondaryAlternatesBuilder(
          int index) {
        return getSecondaryAlternatesFieldBuilder().addBuilder(
            index, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .org.opencb.biodata.models.variant.protobuf.AlternateCoordinate secondaryAlternates = 1;</code>
       */
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder> 
           getSecondaryAlternatesBuilderList() {
        return getSecondaryAlternatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder> 
          getSecondaryAlternatesFieldBuilder() {
        if (secondaryAlternatesBuilder_ == null) {
          secondaryAlternatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinate.Builder, org.opencb.biodata.models.variant.protobuf.VariantProto.AlternateCoordinateOrBuilder>(
                  secondaryAlternates_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          secondaryAlternates_ = null;
        }
        return secondaryAlternatesBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> sampleToGenotype_;
      private com.google.protobuf.MapField<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
      internalGetSampleToGenotype() {
        if (sampleToGenotype_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SampleToGenotypeDefaultEntryHolder.defaultEntry);
       }
        return sampleToGenotype_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
      internalGetMutableSampleToGenotype() {
        onChanged();;
        if (sampleToGenotype_ == null) {
          sampleToGenotype_ = com.google.protobuf.MapField.newMapField(
              SampleToGenotypeDefaultEntryHolder.defaultEntry);
        }
        if (!sampleToGenotype_.isMutable()) {
          sampleToGenotype_ = sampleToGenotype_.copy();
        }
        return sampleToGenotype_;
      }
      /**
       * <code>map&lt;int32, .org.opencb.biodata.models.variant.protobuf.Genotype&gt; sampleToGenotype = 2;</code>
       */
      public java.util.Map<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> getSampleToGenotype() {
        return internalGetSampleToGenotype().getMap();
      }
      /**
       * <code>map&lt;int32, .org.opencb.biodata.models.variant.protobuf.Genotype&gt; sampleToGenotype = 2;</code>
       */
      public java.util.Map<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype>
      getMutableSampleToGenotype() {
        return internalGetMutableSampleToGenotype().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .org.opencb.biodata.models.variant.protobuf.Genotype&gt; sampleToGenotype = 2;</code>
       */
      public Builder putAllSampleToGenotype(
          java.util.Map<java.lang.Integer, org.opencb.biodata.models.variant.protobuf.VariantProto.Genotype> values) {
        getMutableSampleToGenotype().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.opencb.biodata.models.variant.protobuf.ComplexVariant)
    }

    // @@protoc_insertion_point(class_scope:org.opencb.biodata.models.variant.protobuf.ComplexVariant)
    private static final org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant();
    }

    public static org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComplexVariant>
        PARSER = new com.google.protobuf.AbstractParser<ComplexVariant>() {
      public ComplexVariant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new ComplexVariant(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<ComplexVariant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexVariant> getParserForType() {
      return PARSER;
    }

    public org.opencb.biodata.models.variant.protobuf.VariantAnalysisProtos.ComplexVariant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025VariantAnalysis.proto\022*org.opencb.biod" +
      "ata.models.variant.protobuf\032\rvariant.pro" +
      "to\"\311\002\n\016ComplexVariant\022\\\n\023secondaryAltern" +
      "ates\030\001 \003(\0132?.org.opencb.biodata.models.v" +
      "ariant.protobuf.AlternateCoordinate\022j\n\020s" +
      "ampleToGenotype\030\002 \003(\0132P.org.opencb.bioda" +
      "ta.models.variant.protobuf.ComplexVarian" +
      "t.SampleToGenotypeEntry\032m\n\025SampleToGenot" +
      "ypeEntry\022\013\n\003key\030\001 \001(\005\022C\n\005value\030\002 \001(\01324.o" +
      "rg.opencb.biodata.models.variant.protobu",
      "f.Genotype:\0028\001BC\n*org.opencb.biodata.mod" +
      "els.variant.protobufB\025VariantAnalysisPro" +
      "tosb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.opencb.biodata.models.variant.protobuf.VariantProto.getDescriptor(),
        }, assigner);
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor,
        new java.lang.String[] { "SecondaryAlternates", "SampleToGenotype", });
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_descriptor =
      internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_descriptor.getNestedTypes().get(0);
    internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_opencb_biodata_models_variant_protobuf_ComplexVariant_SampleToGenotypeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.opencb.biodata.models.variant.protobuf.VariantProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
