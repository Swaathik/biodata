/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.opencb.biodata.models.variant.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GeneDrugInteraction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeneDrugInteraction\",\"namespace\":\"org.opencb.biodata.models.variant.avro\",\"fields\":[{\"name\":\"geneName\",\"type\":[\"null\",\"string\"]},{\"name\":\"drugName\",\"type\":[\"null\",\"string\"]},{\"name\":\"source\",\"type\":[\"null\",\"string\"]},{\"name\":\"studyType\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.CharSequence geneName;
   private java.lang.CharSequence drugName;
   private java.lang.CharSequence source;
   private java.lang.CharSequence studyType;
   private java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GeneDrugInteraction() {}

  /**
   * All-args constructor.
   */
  public GeneDrugInteraction(java.lang.CharSequence geneName, java.lang.CharSequence drugName, java.lang.CharSequence source, java.lang.CharSequence studyType, java.lang.CharSequence type) {
    this.geneName = geneName;
    this.drugName = drugName;
    this.source = source;
    this.studyType = studyType;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return geneName;
    case 1: return drugName;
    case 2: return source;
    case 3: return studyType;
    case 4: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: geneName = (java.lang.CharSequence)value$; break;
    case 1: drugName = (java.lang.CharSequence)value$; break;
    case 2: source = (java.lang.CharSequence)value$; break;
    case 3: studyType = (java.lang.CharSequence)value$; break;
    case 4: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'geneName' field.
   */
  public java.lang.CharSequence getGeneName() {
    return geneName;
  }

  /**
   * Sets the value of the 'geneName' field.
   * @param value the value to set.
   */
  public void setGeneName(java.lang.CharSequence value) {
    this.geneName = value;
  }

  /**
   * Gets the value of the 'drugName' field.
   */
  public java.lang.CharSequence getDrugName() {
    return drugName;
  }

  /**
   * Sets the value of the 'drugName' field.
   * @param value the value to set.
   */
  public void setDrugName(java.lang.CharSequence value) {
    this.drugName = value;
  }

  /**
   * Gets the value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'studyType' field.
   */
  public java.lang.CharSequence getStudyType() {
    return studyType;
  }

  /**
   * Sets the value of the 'studyType' field.
   * @param value the value to set.
   */
  public void setStudyType(java.lang.CharSequence value) {
    this.studyType = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new GeneDrugInteraction RecordBuilder */
  public static org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder newBuilder() {
    return new org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder();
  }
  
  /** Creates a new GeneDrugInteraction RecordBuilder by copying an existing Builder */
  public static org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder newBuilder(org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder other) {
    return new org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder(other);
  }
  
  /** Creates a new GeneDrugInteraction RecordBuilder by copying an existing GeneDrugInteraction instance */
  public static org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder newBuilder(org.opencb.biodata.models.variant.avro.GeneDrugInteraction other) {
    return new org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder(other);
  }
  
  /**
   * RecordBuilder for GeneDrugInteraction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeneDrugInteraction>
    implements org.apache.avro.data.RecordBuilder<GeneDrugInteraction> {

    private java.lang.CharSequence geneName;
    private java.lang.CharSequence drugName;
    private java.lang.CharSequence source;
    private java.lang.CharSequence studyType;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(org.opencb.biodata.models.variant.avro.GeneDrugInteraction.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.geneName)) {
        this.geneName = data().deepCopy(fields()[0].schema(), other.geneName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.drugName)) {
        this.drugName = data().deepCopy(fields()[1].schema(), other.drugName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.studyType)) {
        this.studyType = data().deepCopy(fields()[3].schema(), other.studyType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GeneDrugInteraction instance */
    private Builder(org.opencb.biodata.models.variant.avro.GeneDrugInteraction other) {
            super(org.opencb.biodata.models.variant.avro.GeneDrugInteraction.SCHEMA$);
      if (isValidValue(fields()[0], other.geneName)) {
        this.geneName = data().deepCopy(fields()[0].schema(), other.geneName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.drugName)) {
        this.drugName = data().deepCopy(fields()[1].schema(), other.drugName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.studyType)) {
        this.studyType = data().deepCopy(fields()[3].schema(), other.studyType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'geneName' field */
    public java.lang.CharSequence getGeneName() {
      return geneName;
    }
    
    /** Sets the value of the 'geneName' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder setGeneName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.geneName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'geneName' field has been set */
    public boolean hasGeneName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'geneName' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder clearGeneName() {
      geneName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'drugName' field */
    public java.lang.CharSequence getDrugName() {
      return drugName;
    }
    
    /** Sets the value of the 'drugName' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder setDrugName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.drugName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'drugName' field has been set */
    public boolean hasDrugName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'drugName' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder clearDrugName() {
      drugName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.source = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'source' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder clearSource() {
      source = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'studyType' field */
    public java.lang.CharSequence getStudyType() {
      return studyType;
    }
    
    /** Sets the value of the 'studyType' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder setStudyType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.studyType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'studyType' field has been set */
    public boolean hasStudyType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'studyType' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder clearStudyType() {
      studyType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder setType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'type' field */
    public org.opencb.biodata.models.variant.avro.GeneDrugInteraction.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public GeneDrugInteraction build() {
      try {
        GeneDrugInteraction record = new GeneDrugInteraction();
        record.geneName = fieldSetFlags()[0] ? this.geneName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.drugName = fieldSetFlags()[1] ? this.drugName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.source = fieldSetFlags()[2] ? this.source : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.studyType = fieldSetFlags()[3] ? this.studyType : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.type = fieldSetFlags()[4] ? this.type : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
